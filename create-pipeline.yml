AWSTemplateFormatVersion: "2010-09-09"
Description: Creates Codebuild resources for SAM Application

Parameters:
  SecretsName:
    NoEcho: true
    Type: String
  FunctionName:
    Type: String
    Description: Lambda function name.
  SourceLocation:
    Type: String
    Description: Source code location URL. For example a Github URL.
    
Resources:
  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Sub "{{resolve:secretsmanager:${SecretsName}:SecretString:github-token}}"

  SamCodeBuild:
    DependsOn: CodeBuildSourceCredential
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub 'sam-deployment-${FunctionName}'
      Description: Build process for a Ruby Lambda function deployed using AWS SAM
      ServiceRole: !GetAtt CodeBuildIAMRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0-23.07.28
      Source:
        Location: !Ref SourceLocation
        Type: GITHUB
        GitCloneDepth: 1
        Auth:
          Type: OAUTH
          Resource: arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:token/github
      Triggers:
        Webhook: true
        FilterGroups:
          - - Type: EVENT
              Pattern: PUSH
              ExcludeMatchedPattern: false
      BadgeEnabled: true
      LogsConfig:
        CloudWatchLogs: 
          Status: ENABLED
        S3Logs:
          Status: DISABLED
          EncryptionDisabled: false
      Artifacts:
        Type: NO_ARTIFACTS
      TimeoutInMinutes: 5

  CodeBuildIAMRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'codebuild-${FunctionName}-service-role'
      Description: Provides Codebuild permission to access API GW, Lambda and Cloudformation
      #Provide Codebuild permission to assume this role
      AssumeRolePolicyDocument: {
        "Version":"2012-10-17",
        "Statement":[
          {
            "Effect":"Allow",
            "Principal":{"Service":"codebuild.amazonaws.com"},
            "Action":"sts:AssumeRole"
          }]
        }
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
      Path: '/service-role/'
      
  CodeBuildBasePolicy:
      Type: AWS::IAM::ManagedPolicy
      Properties:
        ManagedPolicyName: !Sub "CodeBuildBasePolicy-${FunctionName}"
        Roles: 
          - !Ref CodeBuildIAMRole
        PolicyDocument: !Sub | 
          {
            "Version":"2012-10-17",
            "Statement": [
              {
                "Effect":"Allow", 
                "Resource":[ 
                  "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/sam-deployment-${FunctionName}",
                  "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/sam-deployment-${FunctionName}:*"],
                "Action":[
                  "logs:CreateLogGroup",
                  "logs:CreateLogStream",
                  "logs:PutLogEvents"
                  ]
              },
              {
                "Effect":"Allow",
                "Resource":["arn:aws:s3:::codepipeline-${AWS::Region}-*"],
                "Action":[ 
                  "s3:PutObject",
                  "s3:GetObject",
                  "s3:GetObjectVersion",
                  "s3:GetBucketAcl",
                  "s3:GetBucketLocation"
                ]
              },
              {
                "Effect":"Allow",
                "Action":["codebuild:CreateReportGroup","codebuild:CreateReport","codebuild:UpdateReport","codebuild:BatchPutTestCases"],
                "Resource":["arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${FunctionName}-*"]
              }
            ]
          }